Configuring your React Application:
1. Configure your React Project to use Reactstrap:
   Reactstrap is a package supporting easy to use React based Bootstrap 4 components.
   To configure your project to use reactstrap, type the following at the prompt to install reactstrap, and Bootstrap 4:
   yarn add bootstrap@4.0.0
   yarn add reactstrap@5.0.0
   yarn add react-popper@0.9.2

2. Configure to use Bootstrap 4:
   Next, open index.js file in the src folder and add the following line into the imports before the import of index.css(to apply custom css on bootstrap styles):
   import 'bootstrap/dist/css/bootstrap.min.css';

3. Adding a Navigation Bar:
   Open App.js in the src folder and update it as follows:
   import { Navbar, NavbarBrand } from 'reactstrap';

class App extends Component {
  render() {
    return (
      <div className="App">
        <Navbar dark color="primary">
          <div className="container">
            <NavbarBrand href="/">Ristorante Con Fusion</NavbarBrand>
          </div>
        </Navbar>
      </div>
    );
  }
}

Exercise (Instructions): React Components Part 1:
In this exercise we added a new component to our React application,
added data to its
and then updated the app to show the information in the web page.

Exercise React Components Part 2
n this exercise we added a new component to our React application,
added data to its class,
and then updated the app to show the information in the web page.

React Components Week 2:
In this exercise we learned how to structure the app into presentational and container components.
1. Enable your presentational components to be concerned with the look and feel of your app
2. Enable container components to deal with the state, provide the data and handle user interactions.
